
//2-4. 다음 중 변수를 잘못 초기화 한 것은?
byte b = 256;
char c = '';
char answer = 'no';
float f = 3.14
double d = 1.4e3f;


정답: a, b, c, d

byte b = 256; // 범위 초과
char c = ''; // 문자 미지정
char answer = 'no'; // char에 두 개의 문자를 저장할 수 없음. ex) char c
float f = 3.14 // 접미사f 필요


//2-7. 다음 문장들의 출력 결과를 적으세요. 오류가 있는 문장의 경우, '오류' 라고 적으세요.
System.out.println("1" + "2"); 12
System.out.println(true+""); true
System.out.println('A' + 'B'); 131 // (아스키 코드 A: 65 , B: 66)
System.out.println('1' + 2); 51 // (아스키 코드 1: 49)
System.out.println('1' + '2'); 99 // ( 아슼 코드 1: 49, 2: 50
System.out.println('J' +"ava"); Java // ''를 보고 아스키 코드르 생각해서 (아스키 코드) + ava로 산출될 것 같았는데 java로 출력되었다. string이라 그런가?
System.out.println(true + null); 오류 // true + ""


//2-8. 아래는 변수 x, y, z의 값을 서로 바꾸는 예제이다. 결과와 같이 출력되도록 코드를 넣으세요.
public class Exercise2_8{
    public static void main(String[] args){
       int x = 1;
       int y = 2;
       int z = 3;
       /*
            int tmp;
                tmp = x;
                x= y;
                y = tmp;
                y = z;
                z= tmp;
       */ // 교환에 중간다리 역할을 해 줄 변수 하나를 선언합니다.
       System.out.println("x="+x);
       System.out.println("y="+y);
       System.out.println("z="+z);
       
       
    }
}
//예상 결과 : x=2, y=3, z=1


byte b = 10;
char ch = 'A';
int i = 100;
long l = 1000L;
//3-1. 다음 중 형변환을 생략할 수 있는 것은? (모두 고르시오)
b = (byte)i; // int i(4byte) → byte(1byte)이므로 반드시 형변환 필요
ch = (char)b; // b의 경우 byte, 따라서 형변환이 필요
short s = (short)ch; // short와 char의 byte는 2로 같다. 하지만 range가 다르다. 
float f = (float)l; // float(4byte) 범위가 Long(8byte)보다 큼. 
i = (int)ch; //  char(2byte) 에서 int(4byte)로 형변환 가능. 작은 자료형엣 큰 자료형으로 형변환 된다.


//3-2. 다음 연산의 결과와 그 이유를 적으세요.
class Exercise3_2{
   public static void main(String[] args){
      int x = 2;
      int y = 5;
      char c = 'A'; // 'A'의 문자코드는 65
      
      System.out.println(y >= 5 || x < 0 && x > 2); // true
      System.out.println(y += 10 - x++); // 15 - 2 = 13, y = 13, x= 3
      System.out.println(x += 2); // x= 5
      System.out.println(!('A' <= c && c <= 'Z')); // ! (65 <= c = true and 64 <= 'z' = true)  false
      System.out.println('C' - c); 67 - 65 = 2
      System.out.println('5' - '0'); 5
      System.out.println(c + 1); 66
      System.out.println(++c); B
      System.out.println(c++); (c++) = B , C = C
      System.out.println(c); c
   }
}

//3-3. 아래는 변수의 num 값 중에서 백의 자리 이하를 버리는 코드이다. 
//만일 변수 num의 값이 '456'이라면 '400'이 되고, '111'이라면 '100'이 된다. 
//알맞은 코드를 넣으시오.
class Exercise3_3 {
   public static void main(String[] args){
      int num = 456;
      System.out.println(  int num = 456;
                System.out.println((int)456/100 * 100););
   }
}

// 나눗셈은 456/100 = 4.5 이지만 자바에서는 4로 산출된다. 4*100 400임.
//예상 결과 -> 400


//3-4. 아래의 코드는 사과를 담는데 필요한 바구니(버켓)의 수를 구하는 코드이다. 
//만일 사과의 수가 123개이고 하나의 바구니에는 10개의 사과를 담을 수 있다면, 13개의 바구니가 필요할 것이다. 
//알맞은 코드를 넣으시오.
class Exercise3_4{
   public static void main(String[] args){
      int numOfApples = 123; // 사과의 개수
      int sizeOfBucket = 10; // 바구니의 크기(바구니에 담을 수 있는 사과의 개수)
      int numOfBucket = (numOfApples/sizeOfBucket + 1) ; // 모든 사과를 담는데 필요한 바구니의 수
      
      System.out.println("필요한 바구니의 수 :"+numOfBucket); 
   }
}
//예상 결과 -> 필요한 바구니의 수 :13

//3-5. 아래는 변수 num의 값에 따라 '양수', '음수', '0'을 출력하는 코드이다.
//삼항연산자를 이용해서 빈칸에 알맞은 코드를 넣으시오.
//Hint : 삼항 연산자를 두 번 사용할 것!
class Exercise3_5{
   public static void main(String[] args){
      int num = 10;
      System.out.println(num>0 ? "양수" : (num==0 ? "0" : "음수"));
   }
}
//예상 결과 : 양수

3-6.
(int) ((5 / 9f * (fahrenheit - 32)) * 100 + 0.5) / 100f

